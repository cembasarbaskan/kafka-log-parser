version: '3.6'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - service_network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092, PLAINTEXT_HOST://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, PLAINTEXT_HOST://localhost:29092
      KAFKA_CREATE_TOPICS: "test:1:1"
    networks:
      - service_network
    depends_on:
      - zookeeper

  cassandra:
    image: cassandra
    container_name: cassandra
    ports:
      - "9042:9042"
    networks:
      - service_network
    depends_on:
      - zookeeper
      - kafka

  streamer:
    build:
      context: streamer
      args:
        JAR_FILE: log_streamer-0.0.1-SNAPSHOT.jar
    restart: always
    volumes:
      - app-volume:/tmp
    ports:
      - "8080:8080"
    networks:
      - service_network
    links:
      - zookeeper
      - kafka
      - cassandra
    depends_on:
      - zookeeper
      - kafka
      - cassandra

  producer:
    build:
      context: producer
      args:
        JAR_FILE: log_producer-0.0.1-SNAPSHOT.jar
    restart: always
    volumes:
      - app-volume:/tmp
    ports:
      - "8081:8081"
    networks:
      - service_network
    links:
      - zookeeper
      - kafka
      - cassandra
      - streamer
    depends_on:
      - zookeeper
      - kafka
      - cassandra
      - streamer

  consumer:
    build:
      context: consumer
      args:
        JAR_FILE: log_consumer-0.0.1-SNAPSHOT.jar
    restart: always
    volumes:
      - app-volume:/tmp
    ports:
      - "8082:8082"
    networks:
      - service_network
    links:
      - zookeeper
      - kafka
      - cassandra
      - producer
    depends_on:
      - zookeeper
      - kafka
      - cassandra
      - producer

networks:
  service_network:
    driver: bridge
    name: service_network

volumes:
  app-volume: {}
